/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_pt_abnt2.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        less_than {
            bindings = <&kp LESS_THAN>;
            key-positions = <31 20>;
        };

        greater_than {
            bindings = <&kp GREATER_THAN>;
            key-positions = <19 32>;
        };

        question_mark {
            bindings = <&kp PT_QUESTION>;
            key-positions = <31 21>;
        };

        exclamation_mark {
            bindings = <&kp PT_EXCL>;
            key-positions = <19 33>;
        };

        accent_grave {
            bindings = <&kp PT_GRAVE>;
            key-positions = <28 15>;
        };

        accent_acute {
            bindings = <&kp PT_ACUTE>;
            key-positions = <32 21>;
        };

        accent_tilde {
            bindings = <&kp PT_TILDE>;
            key-positions = <31 33>;
        };

        accent_hat {
            bindings = <&kp PT_CARET>;
            key-positions = <19 21>;
        };

        single_quote {
            bindings = <&kp PT_SINGLE_QUOTE>;
            key-positions = <25 27>;
        };

        double_quote {
            bindings = <&kp PT_DOUBLE_QUOTES>;
            key-positions = <13 15>;
        };

        semicolon {
            bindings = <&kp PT_SEMICOLON>;
            key-positions = <26 28>;
        };

        colon {
            bindings = <&kp PT_COLON>;
            key-positions = <14 16>;
        };

        comma {
            bindings = <&kp PT_COMMA>;
            key-positions = <26 27>;
        };

        period {
            bindings = <&kp PT_PERIOD>;
            key-positions = <14 15>;
        };

        equal {
            bindings = <&kp PT_EQUAL>;
            key-positions = <19 18>;
        };

        dash {
            bindings = <&kp PT_MINUS>;
            key-positions = <31 30>;
        };

        underline {
            bindings = <&kp PT_UNDERSCORE>;
            key-positions = <45 44>;
        };

        left_parenthesis {
            bindings = <&kp PT_LEFT_PARENTHESIS>;
            key-positions = <27 28>;
        };

        right_parenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <28 29>;
        };

        left_bracket {
            bindings = <&kp PT_LEFT_BRACKET>;
            key-positions = <15 16>;
        };

        right_bracket {
            bindings = <&kp PT_RIGHT_BRACKET>;
            key-positions = <16 17>;
        };

        left_brace {
            bindings = <&kp PT_LEFT_BRACE>;
            key-positions = <39 40>;
        };

        right_brace {
            bindings = <&kp PT_RIGHT_BRACE>;
            key-positions = <41 40>;
        };

        triple_simple_quote {
            bindings = <&triple_simple_quote>;
            key-positions = <29 17>;
        };

        triple_backtick {
            bindings = <&triple_backtick>;
            key-positions = <29 16>;
        };
    };

    behaviors {
        hold: hold {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            hold-trigger-key-positions = <39>;
        };
    };

    macros {
        triple_simple_quote: triple_backtick {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp GRAVE &kp GRAVE>;
            label = "TRIPLE_BACKTICK";
        };

        triple_backtick: triple_backtick {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PT_GRAVE &kp PT_GRAVE &kp PT_GRAVE>;
            label = "TRIPLE_BACKTICK";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp ESCAPE        &kp N1  &kp N2    &kp N3                &kp N4  &kp N5                                    &kp N6      &kp N7  &kp N8        &kp N9         &kp N0            &kp SINGLE_QUOTE
&kp TAB           &kp Q   &kp W     &kp E                 &kp R   &kp T                                     &kp Y       &kp U   &kp I         &kp O          &kp P             &kp BSPC
&kp LEFT_CONTROL  &kp A   &kp S     &kp D                 &kp F   &kp G                                     &kp H       &kp J   &kp K         &kp L          &kp PT_BACKSLASH  &kp RIGHT_CONTROL
&kp LEFT_SHIFT    &kp Z   &kp X     &hold PT_C_CEDILLA C  &kp V   &kp B          &kp C_MUTE      &to 1      &kp N       &kp M   &kp PT_COMMA  &kp PT_PERIOD  &kp PT_SLASH      &kp RIGHT_SHIFT
                          &kp LGUI  &kp LALT              &mo 1   &kp BACKSPACE  &kp PT_SPACE    &kp ENTER  &kp DELETE  &mo 2   &kp RALT      &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            label = "lower";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&studio_unlock  &kp F1     &kp F2          &kp F3       &kp F4    &kp F5                       &kp F6         &kp F7            &kp F8           &kp F9                   &kp F10                   &kp F11
&kp GRAVE       &kp N1     &kp N2          &kp N3       &kp N4    &kp N5                       &kp N6         &kp N7            &kp N8           &kp N9                   &kp N0                    &kp F12
&trans          &kp EXCL   &kp AT          &kp HASH     &kp DLLR  &kp PRCNT                    &kp PT_UMLAUT  &kp PT_AMPERSAND  &kp KP_MULTIPLY  &kp PT_LEFT_PARENTHESIS  &kp PT_RIGHT_PARENTHESIS  &kp PT_PIPE
&trans          &kp EQUAL  &kp MINUS       &kp KP_PLUS  &kp LBRC  &kp RBRC   &trans    &to 2   &kp KP_DIVIDE  &kp KP_MULTIPLY   &kp PT_PLUS      &kp PT_MINUS             &trans                    &trans
                           &studio_unlock  &trans       &trans    &trans     &trans    &trans  &trans         &trans            &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            label = "raise";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &kp HOME   &kp INSERT  &kp PRINTSCREEN  &trans     &trans   &trans
&trans      &trans        &trans        &kp K_CMENU   &trans        &trans                          &kp PG_UP  &trans      &kp UP           &trans     &trans   &trans
&trans      &kp LALT      &kp LCTRL     &kp LSHFT     &trans        &kp CLCK                        &kp PG_DN  &kp LEFT    &kp DOWN         &kp RIGHT  &kp DEL  &kp BSPC
&trans      &kp K_UNDO    &kp K_CUT     &kp K_COPY    &kp K_PASTE   &trans        &trans    &to 3   &kp END    &trans      &trans           &trans     &trans   &trans
                          &trans        &trans        &trans        &trans        &trans    &trans  &trans     &trans      &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            label = "adjust";
            bindings = <
&bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                               &none  &none  &none  &none  &none  &none
&ext_power EP_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF                            &none  &none  &none  &none  &none  &none
&soft_off          &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &none            &bl BL_TOG                                 &none  &none  &none  &none  &none  &none
&none              &none            &none            &none            &none            &none            &rgb_ug RGB_TOG    &to 0  &none  &none  &none  &none  &none  &none
                                    &none            &none            &none            &none            &none              &none  &none  &none  &none  &none
            >;
        };
    };
};
